import fetch from "node-fetch";

interface VultrexHasteOptions {
    url?: string;
}

export class VultrexHaste {
    private url: string;
    public constructor(options: VultrexHasteOptions) {
        this.url = options ? `${options.url}/documents` : "https://hastebin.com/documents";
    }

    /**
     * POST to a Hastebin URL and return the URL
     * 
     * @param { string } content - The content of what you wish to post to Hastebin
     * @returns { string } The URL of the created Haste
     * 
     * @example
     * const { VultrexHaste } = require("vultrex.haste");
     * const haste = new VultrexHaste({ url: "https://hastebin.com" });
     * 
     * haste.post("Lorem ipsum")
     *      .then(url => console.log(url))
     *      .catch(err => console.log(err));
     */
    public async post(content: string): Promise<string> {
        const res = await fetch(this.url, {
            method: "POST",
            body: content
        });

        if (res.status === 200) {
            const json = await res.json();
            return `${this.url.slice(0, -10)}/${json.key}`;
        }

        return res.statusText;
    }

    /**
     * GET from a Hastebin URL and return the content
     * 
     * @param { string } url - The URL of the Haste
     * @returns { string } The content of the URL
     * 
     * @example
     * const { VultrexHaste } = require("vultrex.haste");
     * const haste = new VultrexHaste();
     * 
     * haste.get("https://hastebin.com/raw/foradowute")
     *      .then(content => console.log(content))
     *      .catch(err => console.log(err));
     */
    public async get(url: string): Promise<string> {
        const res = await fetch(url);
        return res.text();
    }
}